services:
  app:
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
    container_name: order_app
    ports:
    - "9000:9000"
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./app:/var/www/order-api
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    environment:
      APP_DB_USER: ${MYSQL_USER}
      APP_DB_PASSWORD: ${MYSQL_PASSWORD}
      APP_DB_NAME: ${MYSQL_DATABASE}
      APP_DB_SERVER_VERSION: '${DB_SERVER_VERSION}'
    depends_on:
      - db
    networks:
      - order_network
    extra_hosts:
      - hostdocker.internal:host-gateway

  nginx:
    image: nginx:1.28.0-alpine
    container_name: order_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app:/var/www/order-api
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - order_network

  db:
    image: mariadb:11.7.2
    container_name: order_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - order_network

  adminer:
    image: adminer
    container_name: order_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - order_network

networks:
  order_network:
    driver: bridge
